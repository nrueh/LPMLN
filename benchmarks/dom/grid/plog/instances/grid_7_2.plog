% Grid benchmark from Dr. Zhu dissertation

sorts

#m = 1..7.
#n = 1..2.

#node = node(#m,#n).
#boolean = {true, false}.

attributes
rightof: #node, #node -> #boolean.
belowof: #node, #node -> #boolean.
faulty: #node -> #boolean.
flow: #node -> #boolean.

statements
rightof(node(1,1),node(2,1)).
rightof(node(1,2),node(2,2)).
rightof(node(2,1),node(3,1)).
rightof(node(2,2),node(3,2)).
rightof(node(3,1),node(4,1)).
rightof(node(3,2),node(4,2)).
rightof(node(4,1),node(5,1)).
rightof(node(4,2),node(5,2)).
rightof(node(5,1),node(6,1)).
rightof(node(5,2),node(6,2)).
rightof(node(6,1),node(7,1)).
rightof(node(6,2),node(7,2)).
belowof(node(1,1),node(1,2)).
belowof(node(2,1),node(2,2)).
belowof(node(3,1),node(3,2)).
belowof(node(4,1),node(4,2)).
belowof(node(5,1),node(5,2)).
belowof(node(6,1),node(6,2)).
belowof(node(7,1),node(7,2)).

random(faulty(Node)).
pr(faulty(N) = true) = 1/10.

flow(node(1,1)) = true :- not faulty(node(1,1)) = true.
flow(node(X,Y)) = true :- rightof(node(X1,Y),node(X,Y)), flow(node(X1,Y)) = true, not faulty(node(X1,Y)) = true.
flow(node(X,Y)) = true :- belowof(node(X,Y1),node(X,Y)), flow(node(X,Y1)) = true, not faulty(node(X,Y1)) = true.
flow(node(X,Y)) = false :- not flow(node(X,Y)) = true.

? flow(node(7,2)) = true.
